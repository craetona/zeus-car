<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_zeus___car_8cpp" kind="file" language="C++">
    <compoundname>Zeus_Car.cpp</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includes local="no">SoftPWM.h</includes>
    <includes local="yes">string.h</includes>
    <includes refid="ir__remote_8h" local="yes">ir_remote.h</includes>
    <includes refid="rgb_8h" local="yes">rgb.h</includes>
    <includes refid="_zeus___car_8h" local="yes">Zeus_Car.h</includes>
    <includes refid="car__control_8h" local="yes">car_control.h</includes>
    <includes refid="ai__camera_8h" local="yes">ai_camera.h</includes>
    <includes refid="hc165_8h" local="yes">hc165.h</includes>
    <includes refid="ir__obstacle_8h" local="yes">ir_obstacle.h</includes>
    <includes refid="grayscale_8h" local="yes">grayscale.h</includes>
    <includes refid="ultrasonic_8h" local="yes">ultrasonic.h</includes>
    <includes refid="cmd__code__config_8hpp" local="yes">cmd_code_config.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp</label>
        <link refid="_zeus___car_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Zeus_Car.h</label>
        <link refid="_zeus___car_8h_source"/>
      </node>
      <node id="10">
        <label>ai_camera.h</label>
        <link refid="ai__camera_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>car_control.h</label>
        <link refid="car__control_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cmd_code_config.hpp</label>
        <link refid="cmd__code__config_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>compass.h</label>
        <link refid="compass_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>grayscale.h</label>
        <link refid="grayscale_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hc165.h</label>
        <link refid="hc165_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ir_obstacle.h</label>
        <link refid="ir__obstacle_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ir_remote.h</label>
        <link refid="ir__remote_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>rgb.h</label>
        <link refid="rgb_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ultrasonic.h</label>
        <link refid="ultrasonic_8h_source"/>
      </node>
      <node id="3">
        <label>SoftPWM.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>Configure</header>
      <memberdef kind="define" id="_zeus___car_8cpp_1a0127293d811b7166473872d1ba984348" prot="public" static="no">
        <name>WATCH_DOG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to enable Watchdog </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="42" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1ab946e2e7f7679350627acfded8e2658b" prot="public" static="no">
        <name>TEST</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to enable TEST mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="48" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a249f4b957c983020b02c6c6376c47c6a" prot="public" static="no">
        <name>MEM</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to enable <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="54" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a4e3075c45ada71b4a46179e6ed778c25" prot="public" static="no">
        <name>WIFI_MODE</name>
        <initializer>WIFI_MODE_AP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure Wifi mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="62" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1aaf46549480a528db5ba7d78e7270b5a9" prot="public" static="no">
        <name>SSID</name>
        <initializer>&quot;Zeus_Car&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure Wifi SSID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="65" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a9e8538fad4eee548302ad9f60e6d47ca" prot="public" static="no">
        <name>PASSWORD</name>
        <initializer>&quot;12345678&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure Wifi password </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="68" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a47f2e62c0dbebc787052c165afcada0e" prot="public" static="no">
        <name>NAME</name>
        <initializer>&quot;Zeus_Car&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure product name </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="76" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a5a392548f2df67370cb15d2a5d75cd7b" prot="public" static="no">
        <name>TYPE</name>
        <initializer>&quot;Zeus_Car&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure product type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="79" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a614217d263be1fb1a5f76e2ff7be19a2" prot="public" static="no">
        <name>PORT</name>
        <initializer>&quot;8765&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure websockets port</para>
<para>Sunfounder Controller APP fixed using port 8765 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="85" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a2cfdd6a3257bbe9ab843e9f266800170" prot="public" static="no">
        <name>SPEECH_REMOTE_POWER</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the motor speed in voice control modes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="88" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1ad7ef0b908f72a2613044b9252814f833" prot="public" static="no">
        <name>IR_REMOTE_POWER</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the motor speed in IR remote control modes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="91" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a9d065e57e80b405a42414140e431e5e5" prot="public" static="no">
        <name>LINE_FOLLOW_POWER</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the motor speed in line follow modes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="94" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1acaff6fafad1749b8f4ddfdd75b294985" prot="public" static="no">
        <name>OBSTACLE_FOLLOW_POWER</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the motor speed in line obstacle follow modes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="97" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1ace1aabf9d16db3922eff8b454c73b9ab" prot="public" static="no">
        <name>LINE_FOLLOW_OFFSET_ANGLE</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the unit angle of line follower adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="100" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1ac6ef3f3b67e598bfb091885a833a38dd" prot="public" static="no">
        <name>WS_HEADER</name>
        <initializer>&quot;WS+&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>websocket communication headers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="103" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_zeus___car_8cpp_1a1c6d5de492ac61ad29aec7aa9a436bbf" prot="public" static="no">
        <name>VERSION</name>
        <initializer>&quot;1.0.0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="20" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_zeus___car_8cpp_1a0abf2764a011e1004a7e663b8427a51d" prot="public" static="no">
        <name>IsStartWith</name>
        <param><defname>str</defname></param>
        <param><defname>prefix</defname></param>
        <initializer>(strncmp(str, prefix, strlen(prefix)) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a string starts with a certain character </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="109" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_zeus___car_8cpp_1ab4127442b11cb3e54c3b39c6145ae93d" prot="public" static="no" mutable="no">
        <type><ref refid="class_ai_camera" kindref="compound">AiCamera</ref></type>
        <definition>AiCamera aiCam</definition>
        <argsstring></argsstring>
        <name>aiCam</name>
        <initializer>= <ref refid="class_ai_camera" kindref="compound">AiCamera</ref>(NAME, TYPE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate aicamera, a class for serial communication with ESP32-CAM </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="112" column="10" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1ab371f727a2d7acc93c37f12d02d225c7" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t currentMode</definition>
        <argsstring></argsstring>
        <name>currentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="114" column="16" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="12" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="114" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a0079ca3a4ea82734f114983ef8637ee5" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t currentAngle</definition>
        <argsstring></argsstring>
        <name>currentAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="115" column="16" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="13" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="115" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1af9757b4406e2fc87d9080bce52317a3d" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t remoteAngle</definition>
        <argsstring></argsstring>
        <name>remoteAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="116" column="16" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="14" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="116" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a7184f73e43fbe78ab22c9939b6b49357" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t remotePower</definition>
        <argsstring></argsstring>
        <name>remotePower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="117" column="15" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="15" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="117" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a44892c1dd571c3e744524c08e6c200f6" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t remoteHeading</definition>
        <argsstring></argsstring>
        <name>remoteHeading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="118" column="16" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="16" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="118" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1aa4dbd6cd70c1aa05e1d6e0e1a11f2b07" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t remoteHeadingR</definition>
        <argsstring></argsstring>
        <name>remoteHeadingR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="119" column="16" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="17" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="119" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1ad17c97d2346ed0acbebeb1b8ea52bb60" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool remoteDriftEnable</definition>
        <argsstring></argsstring>
        <name>remoteDriftEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="120" column="13" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/cmd_code_config.hpp" bodystart="18" bodyend="-1" declfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" declline="120" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a42655a69aff547ff59933df90f22f9e9" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t app_remoteAngle</definition>
        <argsstring></argsstring>
        <name>app_remoteAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="121" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1afe72b18806e80685dcbe78cdd018e537" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t app_remotePower</definition>
        <argsstring></argsstring>
        <name>app_remotePower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="122" column="8" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1ad36f9444974824632f86fdd842c8055b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char speech_buf[20]</definition>
        <argsstring>[20]</argsstring>
        <name>speech_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="123" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1aa509ad7376908c1f1252d500d5c055b0" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t fcAngle</definition>
        <argsstring></argsstring>
        <name>fcAngle</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field centric angle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="326" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a95a2eb7e72187294cc19a9458be5f0e4" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t rcAngle</definition>
        <argsstring></argsstring>
        <name>rcAngle</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Robot centric angle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="328" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_zeus___car_8cpp_1a32937b10513a9645d9ef494ffed1e20c" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t currentHeading</definition>
        <argsstring></argsstring>
        <name>currentHeading</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="329" column="9" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_zeus___car_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setup(), Ardunio main program entrance</para>
<para>Initialization of some peripherals </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="133" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="133" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loop(), Ardunio main loop</para>
<para><itemizedlist>
<listitem><para>inclued<itemizedlist>
<listitem><para>aiCam.loop()</para>
</listitem><listitem><para>ir_remoteHandler()()</para>
</listitem><listitem><para>modeHandler()</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>or modules test </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="172" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="172" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1aafcfab6f4bc009e2dbdf88889361798c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modeHandler</definition>
        <argsstring>()</argsstring>
        <name>modeHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>modeHandler(), Execute the corresponding program according to the set mode</para>
<para><itemizedlist>
<listitem><para>inclued<itemizedlist>
<listitem><para>MODE_NONE</para>
</listitem><listitem><para>MODE_LINE_FOLLOWING</para>
</listitem><listitem><para>MODE_ROTATE_LINE_FOLLOWING</para>
</listitem><listitem><para>MODE_OBSTACLE_FOLLOWING</para>
</listitem><listitem><para>MODE_OBSTACLE_AVOIDANCE</para>
</listitem><listitem><para>MODE_REMOTE_CONTROL</para>
</listitem><listitem><para>MODE_APP_CONTROL</para>
</listitem><listitem><para>MODE_COMPASS_CALIBRATION </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="214" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="214" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1ac2f1632d219ab1a5b06d89c31e0db967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lineFollowing</definition>
        <argsstring>()</argsstring>
        <name>lineFollowing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Line follow program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="274" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="274" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1a4f50aa6578bb8f2552bd60266258f6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotateLineFollowing</definition>
        <argsstring>()</argsstring>
        <name>rotateLineFollowing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate line follow program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="333" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="333" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1a98efcbee1240cd4ea7c469cdf93d86f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void obstacleFollowing</definition>
        <argsstring>()</argsstring>
        <name>obstacleFollowing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obstacle follow program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="376" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="376" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1abe46c826df3be744548fb954242ae776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void obstacleAvoidance</definition>
        <argsstring>()</argsstring>
        <name>obstacleAvoidance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obstacle avoidance program </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="400" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="400" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1ae8a8116b1243e7d0c40c1dd3849dded3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ir_remoteHandler</definition>
        <argsstring>()()</argsstring>
        <name>ir_remoteHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ir_remoteHandler(), handle IR remote control key events </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="424" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="424" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="_zeus___car_8cpp_1a617474ace00e5324c3ffbbfba3c57394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void onReceive</definition>
        <argsstring>(char *recvBuf, char *sendBuf)</argsstring>
        <name>onReceive</name>
        <param>
          <type>char *</type>
          <declname>recvBuf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>sendBuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>websocket received data processing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" line="484" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp" bodystart="484" bodyend="581"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>The<sp/>control<sp/>program<sp/>of<sp/>the<sp/>Ardunio<sp/>Mecanum<sp/>wheel<sp/>trolley</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Development<sp/>test<sp/>environment:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Arduino<sp/>IDE<sp/>1.8.19</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Board<sp/>tools:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>Arduino<sp/>AVR<sp/>Boards<sp/>1.8.3</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Libraries:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>IRRemote</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>SoftPWM</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>Version:<sp/>1.0.0</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>--<sp/>https://github.com/sunfounder/zeus-car.git</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Author:<sp/>Sunfounder</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>Website:<sp/>http://www.sunfounder.com</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://docs.sunfounder.com</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION<sp/>&quot;1.0.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SoftPWM.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ir_remote.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rgb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Zeus_Car.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;car_control.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ai_camera.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hc165.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ir_obstacle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;grayscale.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ultrasonic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmd_code_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/***************************<sp/>Configure<sp/>*******************************/</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WATCH_DOG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WATCH_DOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;avr/wdt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEM<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;MemoryFree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;pgmStrToRAM.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>not<sp/>needed<sp/>for<sp/>new<sp/>way.<sp/>but<sp/>good<sp/>to<sp/>have<sp/>for<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_MODE<sp/>WIFI_MODE_AP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSID<sp/>&quot;Zeus_Car&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PASSWORD<sp/>&quot;12345678&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>WIFI_MODE<sp/>WIFI_MODE_STA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>SSID<sp/>&quot;xxxxxxxxxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>PASSWORD<sp/>&quot;xxxxxxxxxx&quot;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NAME<sp/>&quot;Zeus_Car&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE<sp/>&quot;Zeus_Car&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT<sp/>&quot;8765&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPEECH_REMOTE_POWER<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IR_REMOTE_POWER<sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINE_FOLLOW_POWER<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OBSTACLE_FOLLOW_POWER<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINE_FOLLOW_OFFSET_ANGLE<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WS_HEADER<sp/>&quot;WS+&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/***********************<sp/>Global<sp/>variables<sp/>****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IsStartWith(str,<sp/>prefix)<sp/>(strncmp(str,<sp/>prefix,<sp/>strlen(prefix))<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="class_ai_camera" kindref="compound">AiCamera</ref><sp/>aiCam<sp/>=<sp/><ref refid="class_ai_camera" kindref="compound">AiCamera</ref>(NAME,<sp/>TYPE);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/>currentMode;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int16_t<sp/>currentAngle;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int16_t<sp/>remoteAngle;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int8_t<sp/>remotePower;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int16_t<sp/>remoteHeading;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int16_t<sp/>remoteHeadingR;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remoteDriftEnable;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">int16_t<sp/>app_remoteAngle;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">int8_t<sp/>app_remotePower;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>speech_buf[20];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/***********************<sp/>setup()<sp/>&amp;<sp/>loop()<sp/>************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Arduino<sp/>Car<sp/>version<sp/>&quot;</highlight><highlight class="normal">);Serial.println(VERSION);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Initialzing...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>SoftPWMBegin();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>rgbBegin();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>rgbWrite(ORANGE);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>carBegin();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>hc165Begin();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>irBegin();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>aiCam.<ref refid="class_ai_camera_1afdf92ba1920eb5f24ba27b5346459011" kindref="member">begin</ref>(SSID,<sp/>PASSWORD,<sp/>WIFI_MODE,<sp/>PORT);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>aiCam.<ref refid="class_ai_camera_1a70117b1447dfd1587c043a1d2b577528" kindref="member">setOnReceived</ref>(onReceive);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>m<sp/>&lt;<sp/>500)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>peripherals<sp/>to<sp/>be<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>WATCH_DOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>wdt_disable();<sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>watchdog<sp/>and<sp/>wait<sp/>for<sp/>more<sp/>than<sp/>2<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>delay(3000);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Done<sp/>so<sp/>that<sp/>the<sp/>Arduino<sp/>doesn&apos;t<sp/>keep<sp/>resetting<sp/>infinitely<sp/>in<sp/>case<sp/>of<sp/>wrong<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>wdt_enable(WDTO_2S);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>watchdog<sp/>with<sp/>a<sp/>timeout<sp/>of<sp/>2<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Okie!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>rgbWrite(GREEN);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>!TEST<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>aiCam.<ref refid="class_ai_camera_1a829ca6ade8d4417b5ba7afc450c76240" kindref="member">loop</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ir_remoteHandler()();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>modeHandler();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>item<sp/>to<sp/>be<sp/>tested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>motors_test();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rgb_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grayscale_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ultrasonic_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ir_obstacle_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obstacleAvoidance();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compass_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ir_remote_test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>WATCH_DOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();<sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>watchdog<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Free<sp/>RAM<sp/>=<sp/>&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//F<sp/>function<sp/>does<sp/>the<sp/>same<sp/>and<sp/>is<sp/>now<sp/>a<sp/>built<sp/>in<sp/>library,<sp/>in<sp/>IDE<sp/>&gt;<sp/>1.0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(freeMemory());<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>how<sp/>much<sp/>RAM<sp/>is<sp/>available<sp/>in<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*****************************<sp/>Functions<sp/>******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>modeHandler()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentMode)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_NONE:<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_NONE_COLOR);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_LINE_FOLLOWING:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_LINE_FOLLOWING_COLOR);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>LINE_FOLLOW_POWER;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lineFollowing();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_ROTATE_LINE_FOLLOWING:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_LINE_FOLLOWING_COLOR);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>LINE_FOLLOW_POWER;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rotateLineFollowing();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_OBSTACLE_FOLLOWING:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_OBSTACLE_FOLLOWING_COLOR);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>OBSTACLE_FOLLOW_POWER;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obstacleFollowing();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_OBSTACLE_AVOIDANCE:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_OBSTACLE_AVOIDANCE_COLOR);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>OBSTACLE_FOLLOW_POWER;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obstacleAvoidance();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_REMOTE_CONTROL:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_REMOTE_CONTROL_COLOR);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carMoveFieldCentric(remoteAngle,<sp/>remotePower,<sp/>remoteHeading,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_APP_CONTROL:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(MODE_APP_CONTROL_COLOR);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carMoveFieldCentric(remoteAngle,<sp/>remotePower,<sp/>remoteHeading,<sp/>remoteDriftEnable);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MODE_COMPASS_CALIBRATION:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>WATCH_DOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_disable();<sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>watchdog<sp/>and<sp/>wait<sp/>for<sp/>more<sp/>than<sp/>2<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/>compassCalibrateLoop();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changed)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbWrite(GREEN);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbOff();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compassCalibrateDone())<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_NONE;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>WATCH_DOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wdt_enable(WDTO_2S);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>watchdog<sp/>with<sp/>a<sp/>timeout<sp/>of<sp/>2<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lineFollowing()<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>uint16_t<sp/>result<sp/>=<sp/>gsGetAngleOffset();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>uint8_t<sp/>angleType<sp/>=<sp/>result<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>uint8_t<sp/>offsetType<sp/>=<sp/>result<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>int16_t<sp/>angle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>int8_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(angleType)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_N45:<sp/><sp/><sp/>angle<sp/>=<sp/>-45;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_0:<sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_45:<sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/>45;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_90:<sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/>90;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_ERROR:<sp/>angle<sp/>=<sp/>currentAngle;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(offsetType)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_N1:<sp/><sp/><sp/><sp/>offset<sp/>=<sp/>-1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_0:<sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_1:<sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><sp/>1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_ERROR:<sp/>offset<sp/>=<sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>int16_t<sp/>deltaAngle<sp/>=<sp/>currentAngle<sp/>-<sp/>angle;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&gt;<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaAngle<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&lt;<sp/>-180)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaAngle<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,currentAngle=&quot;);Serial.print(currentAngle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,angleType=&quot;);Serial.print(angle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,deltaAngle=&quot;);Serial.print(deltaAngle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&gt;<sp/>90)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>-=<sp/>180;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&lt;<sp/>-90)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>+=<sp/>180;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>currentAngle<sp/>=<sp/>angle<sp/>+<sp/>(offset*LINE_FOLLOW_OFFSET_ANGLE);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>carMoveFieldCentric(currentAngle,<sp/>LINE_FOLLOW_POWER,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,angle=&quot;);Serial.print(angle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,<sp/>offset=&quot;);Serial.print(offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;,<sp/>moveAngle=&quot;);Serial.println(currentAngle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">int16_t<sp/>fcAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">int16_t<sp/>rcAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">int16_t<sp/>currentHeading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotateLineFollowing()<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>currentHeading<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentHeading<sp/>&gt;<sp/>360)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>currentHeading<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>uint16_t<sp/>result=gsGetAngleOffset();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>uint8_t<sp/>angleType<sp/>=<sp/>result<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>uint8_t<sp/>offsetType<sp/>=<sp/>result<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>int16_t<sp/>angle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>int8_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(angleType)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_N45:<sp/><sp/><sp/>angle<sp/>=<sp/>-45;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_0:<sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_45:<sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/>45;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_90:<sp/><sp/><sp/><sp/>angle<sp/>=<sp/><sp/>90;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ANGLE_ERROR:<sp/>angle<sp/>=<sp/>rcAngle;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(offsetType)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_N1:<sp/><sp/><sp/><sp/>offset<sp/>=<sp/>-1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_0:<sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_1:<sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><sp/>1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OFFSET_ERROR:<sp/>offset<sp/>=<sp/><sp/>0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>int16_t<sp/>deltaAngle<sp/>=<sp/>rcAngle<sp/>-<sp/>angle;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&gt;<sp/>90)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>+=<sp/>180;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaAngle<sp/>&lt;<sp/>-90)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>-=<sp/>180;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>rcAngle<sp/>=<sp/>angle;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>fcAngle<sp/>=<sp/>rcAngle<sp/>+<sp/>currentHeading;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>int16_t<sp/>moveAngle<sp/>=<sp/>fcAngle<sp/>+<sp/>(offset*LINE_FOLLOW_OFFSET_ANGLE);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>carMoveFieldCentric(moveAngle,<sp/>CAR_DEFAULT_POWER,<sp/>currentHeading);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>obstacleFollowing()<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>irObstacleRead();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leftIsClear<sp/>=<sp/>result<sp/>&amp;<sp/>0b00000001;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rightIsClear<sp/>=<sp/>result<sp/>&amp;<sp/>0b00000010;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>usDistance<sp/>=<sp/>ultrasonicRead();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usDistance<sp/>&lt;<sp/>10<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usDistance<sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>carForward();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!leftIsClear)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carTurnLeft();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rightIsClear)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carTurnRight();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>obstacleAvoidance()<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>irObstacleRead();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leftIsClear<sp/>=<sp/>result<sp/>&amp;<sp/>0b00000001;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rightIsClear<sp/>=<sp/>result<sp/>&amp;<sp/>0b00000010;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>middleIsClear<sp/>=<sp/>ultrasonicIsClear();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(middleIsClear<sp/>&amp;&amp;<sp/>leftIsClear<sp/>&amp;&amp;<sp/>rightIsClear)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>carForward();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftIsClear)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carTurnLeft();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rightIsClear)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carTurnRight();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carMove(0,<sp/>0,<sp/>20);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(400);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ir_remoteHandler()()<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>uint8_t<sp/>key<sp/>=<sp/>irRead();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>IR_KEY_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>key<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>IR_REMOTE_POWER;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>int8_t<sp/>cmd_code<sp/>=<sp/>ir_key_2_cmd_code(key);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_code<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_REMOTE_CONTROL;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd_fuc_table[cmd_code]();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(key)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_POWER:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_NONE;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_MODE:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_MUTE:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_COMPASS_CALIBRATION;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carMove(0,<sp/>0,<sp/>CAR_CALIBRATION_POWER);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compassCalibrateStart();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_PLAY_PAUSE:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_LINE_FOLLOWING;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_BACKWARD:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_OBSTACLE_FOLLOWING;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_FORWARD:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_OBSTACLE_AVOIDANCE;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_EQ:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_MINUS:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_PLUS:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IR_KEY_0:<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>origin<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_REMOTE_CONTROL;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteAngle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteHeading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteDriftEnable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onReceive(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recvBuf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sendBuf)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;recv:&quot;);Serial.println(recvBuf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mode<sp/>select:<sp/>line<sp/>following,<sp/>obstacle<sp/>following,<sp/>obstacle<sp/>avoidance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1ae22bef06d01876146c7018a182c6cda1" kindref="member">getSwitch</ref>(recvBuf,<sp/>REGION_N))<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_LINE_FOLLOWING;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1ae22bef06d01876146c7018a182c6cda1" kindref="member">getSwitch</ref>(recvBuf,<sp/>REGION_O))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_OBSTACLE_FOLLOWING;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1ae22bef06d01876146c7018a182c6cda1" kindref="member">getSwitch</ref>(recvBuf,<sp/>REGION_P))<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_OBSTACLE_AVOIDANCE;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentMode<sp/>==<sp/>MODE_LINE_FOLLOWING<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>currentMode<sp/>==<sp/>MODE_OBSTACLE_FOLLOWING<sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>currentMode<sp/>==<sp/>MODE_OBSTACLE_AVOIDANCE){</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_NONE;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remoteHeading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1a54c0f9c558ed9b309354bff3e09740e4" kindref="member">getButton</ref>(recvBuf,<sp/>REGION_F))<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_NONE;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compass<sp/>Calibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1a54c0f9c558ed9b309354bff3e09740e4" kindref="member">getButton</ref>(recvBuf,<sp/>REGION_E))<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_COMPASS_CALIBRATION;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>carMove(0,<sp/>0,<sp/>CAR_CALIBRATION_POWER);<sp/></highlight><highlight class="comment">//<sp/>rote<sp/>to<sp/>calibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>compassCalibrateStart();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>Origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aiCam.<ref refid="class_ai_camera_1a54c0f9c558ed9b309354bff3e09740e4" kindref="member">getButton</ref>(recvBuf,<sp/>REGION_I))<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>carStop();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteHeading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Joystick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>uint16_t<sp/>angle<sp/>=<sp/>aiCam.<ref refid="class_ai_camera_1a7d49755ad92a8f8c631f6ee5421b8e31" kindref="member">getJoystick</ref>(recvBuf,<sp/>REGION_K,<sp/>JOYSTICK_ANGLE);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>uint8_t<sp/>power<sp/>=<sp/>aiCam.<ref refid="class_ai_camera_1a7d49755ad92a8f8c631f6ee5421b8e31" kindref="member">getJoystick</ref>(recvBuf,<sp/>REGION_K,<sp/>JOYSTICK_RADIUS);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>power<sp/>=<sp/>map(power,<sp/>0,<sp/>100,<sp/>0,<sp/>CAR_DEFAULT_POWER);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(app_remoteAngle<sp/>!=<sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>app_remoteAngle<sp/>=<sp/>angle;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteAngle<sp/>=<sp/>app_remoteAngle;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(app_remotePower<sp/>!=<sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>app_remotePower<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>app_remotePower;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Drift<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;Drift:&quot;);Serial.println(remoteDriftEnable);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remoteDriftEnable<sp/>!=<sp/>aiCam.<ref refid="class_ai_camera_1ae22bef06d01876146c7018a182c6cda1" kindref="member">getSwitch</ref>(recvBuf,<sp/>REGION_J))<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteDriftEnable<sp/>=<sp/>!remoteDriftEnable;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MoveHead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>moveHeadingA<sp/>=<sp/>aiCam.<ref refid="class_ai_camera_1a7d49755ad92a8f8c631f6ee5421b8e31" kindref="member">getJoystick</ref>(recvBuf,<sp/>REGION_Q,<sp/>JOYSTICK_ANGLE);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>int16_t<sp/>moveHeadingR<sp/>=<sp/>aiCam.<ref refid="class_ai_camera_1a7d49755ad92a8f8c631f6ee5421b8e31" kindref="member">getJoystick</ref>(recvBuf,<sp/>REGION_Q,<sp/>JOYSTICK_RADIUS);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remoteHeading<sp/>!=<sp/><sp/>moveHeadingA<sp/>||<sp/>remoteHeadingR<sp/>!=<sp/><sp/>moveHeadingR){</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteHeading<sp/>=<sp/>moveHeadingA;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>remoteHeadingR<sp/>=<sp/>moveHeadingR;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remoteDriftEnable<sp/>&amp;&amp;<sp/>moveHeadingR<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Drift<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carResetHeading();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remoteHeading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;head:&quot;);Serial.println(remoteHeading);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Speech<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>speech_buf_temp[20];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>aiCam.<ref refid="class_ai_camera_1a7ff76f397ca31b706aff9fea6dde6c3f" kindref="member">getSpeech</ref>(recvBuf,<sp/>REGION_M,<sp/>speech_buf_temp);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(speech_buf_temp,<sp/>speech_buf)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(speech_buf,<sp/>speech_buf_temp);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(speech_buf)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>cmd_code<sp/>=<sp/>text_2_cmd_code(speech_buf);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_code<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remotePower<sp/>=<sp/>SPEECH_REMOTE_POWER;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMode<sp/>=<sp/>MODE_APP_CONTROL;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_fuc_table[cmd_code]();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/Zeus_Car.cpp"/>
  </compounddef>
</doxygen>
