<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="rgb_8cpp" kind="file" language="C++">
    <compoundname>rgb.cpp</compoundname>
    <includes refid="rgb_8h" local="yes">rgb.h</includes>
    <includes local="no">SoftPWM.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp</label>
        <link refid="rgb_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rgb.h</label>
        <link refid="rgb_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SoftPWM.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="rgb_8cpp_1ae09a412019233ba9f240c0e15639a4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbBegin</definition>
        <argsstring>()</argsstring>
        <name>rgbBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize RGB leds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" line="4" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" bodystart="4" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="rgb_8cpp_1af223ecb40eca6d6afc3e3238814a640d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbWrite</definition>
        <argsstring>(uint32_t color)</argsstring>
        <name>rgbWrite</name>
        <param>
          <type>uint32_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set LED color in HEX </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" line="11" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="rgb_8cpp_1a3ab0755b5070fd92e1ccaa0cdbb9ece9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbWrite</definition>
        <argsstring>(uint8_t r, uint8_t g, uint8_t b)</argsstring>
        <name>rgbWrite</name>
        <param>
          <type>uint8_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set LED color in 8bit R,G,B (0 ~ 255) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" line="18" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" bodystart="18" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="rgb_8cpp_1a1d676e37d65decf5f65a35ea3a75cec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgbOff</definition>
        <argsstring>()</argsstring>
        <name>rgbOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn odd RGB LEDs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" line="29" column="6" bodyfile="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;rgb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SoftPWM.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rgbBegin()<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>SoftPWMSet(RGB_PINS[i],<sp/>0);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>SoftPWMSetFadeTime(RGB_PINS[i],<sp/>100,<sp/>100);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rgbWrite(uint32_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>uint8_t<sp/>r<sp/>=<sp/>(color<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>uint8_t<sp/>g<sp/>=<sp/>(color<sp/>&gt;&gt;<sp/><sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>uint8_t<sp/>b<sp/>=<sp/>(color<sp/>&gt;&gt;<sp/><sp/>0)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>rgbWrite(r,<sp/>g,<sp/>b);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rgbWrite(uint8_t<sp/>r,<sp/>uint8_t<sp/>g,<sp/>uint8_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>COMMON_ANODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>255<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>255<sp/>-<sp/>g;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>255<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>SoftPWMSet(RGB_PINS[0],<sp/>r);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>SoftPWMSet(RGB_PINS[1],<sp/>g);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>SoftPWMSet(RGB_PINS[2],<sp/>b);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rgbOff()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>rgbWrite(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/00_lhl/05_arduino_esp32/Zeus_Car/zeus-car/Zeus_Car/rgb.cpp"/>
  </compounddef>
</doxygen>
